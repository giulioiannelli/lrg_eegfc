[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lrg-eegfc"
version = "0.1.0"
description = "EEG functional connectivity analysis tools for brain network research"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Giulio Iannelli", email = "giulio.iannelli@cref.com"},
]
maintainers = [
    {name = "Giulio Iannelli", email = "giulio.iannelli@cref.com"},
]
keywords = [
    "eeg",
    "functional-connectivity", 
    "brain-networks",
    "neuroscience",
    "correlation-matrix",
    "signal-processing"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "h5py>=3.8.0",
    "networkx>=3.0",
    "emd>=0.8.0",
    "lrgsglib",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipython>=8.0.0",
    "ipywidgets>=8.0.0",
    "ipympl>=0.9.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.23.0",
]

[project.urls]
Homepage = "https://github.com/giulioiannelli/lrg_eegfc"
Repository = "https://github.com/giulioiannelli/lrg_eegfc"
Documentation = "https://github.com/giulioiannelli/lrg_eegfc#readme"
"Bug Tracker" = "https://github.com/giulioiannelli/lrg_eegfc/issues"

[project.scripts]
lrg-eegfc-corr = "lrg_eegfc.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["lrg_eegfc*"]

[tool.setuptools.package-data]
lrg_eegfc = ["*.txt", "*.md"]

# Black code formatter configuration
[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort import sorter configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lrg_eegfc"]
known_third_party = ["numpy", "pandas", "scipy", "matplotlib", "h5py", "emd", "lrgsglib"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy type checker configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "emd.*",
    "lrgsglib.*",
]
ignore_missing_imports = true

# Flake8 linter configuration (for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]
